<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:p="http://xmlns.jcp.org/jsf/passthrough">
<h:head/>
<h:body>
    <h2>Authors:</h2>
    <h:dataTable value="#{authors.allAuthors}" var="author" border="1">
        <h:column>
            <f:facet name="header">
                Author Name
            </f:facet>
            <h:link value="#{author.name}" outcome="books?authorId=#{author.id}" />
        </h:column>
        <h:column>
            <f:facet name="header">Book Count</f:facet>
            #{author.books.size()}
        </h:column>
        <h:column>
            <f:facet name="header">
                Co-Authors
            </f:facet>
            #{authors.findCoAuthors(author)}
        </h:column>
    </h:dataTable>
    <h:form>
        <h:inputText value="#{authors.authorToCreate.name}" required="true" p:placeholder="Author name"/>
        <h:commandButton value="Add new author" actionListener="#{authors.createAuthor}" action="index?faces-redirect=true"/>
    </h:form>
    <div>
        <h:link outcome="book"  value="Add book to multiple authors"/>
    </div>
    <h:form>
        <h:commandButton value="Start Long Calculation" action="#{calculationContainer.startCalculation}">
            <f:ajax execute="@form" render="statusWrapper" />
        </h:commandButton>
        <h:panelGroup id="statusWrapper">
            <h:outputText id="outputStatus" value="#{calculationContainer.isCalculationDone ? 'Calculation complete. ' : 'Waiting for calculation results...'}" />
            <h:outputText id="outputResult" rendered="#{calculationContainer.isCalculationDone}" value="#{calculationContainer.taskResult}" />
        </h:panelGroup>
    </h:form>
    <h2>Author controls with REST:</h2>
    <h:form id="createAuthorRestForm">
        <h:inputText styleClass="authorName" value="#{authors.authorToCreate.name}" required="true" p:placeholder="Author name"/>
        <button type="button" onclick="addAuthor()">Add new author</button>
    </h:form>
    <h:form>
        <h:inputText styleClass="authorId" value="#{authors.authorToCreate.id}" required="true" p:placeholder="Author ID"/>
        <button type="button" onclick="getAuthor()">Get existing author</button>
        <div id="authorNameDisplay"></div>
    </h:form>
    <h:form>
        <h:inputText styleClass="authorIdUpdate" value="#{authors.authorToUpdate.id}" required="true" p:placeholder="Author ID"/>
        <h:inputText styleClass="authorNameUpdate" value="#{authors.authorToUpdate.name}" required="true" p:placeholder="New Author Name"/>
        <button type="button" onclick="updateAuthor()">Update Author</button>
    </h:form>


</h:body>

<script>
    function addAuthor() {
        var name = document.querySelector('.authorName').value;
        fetch('/java-ee-practice/api/authors/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name: name })
        })
            .then(response => {
                console.log(response);
            })
    }

    function getAuthor() {
        var authorId = document.querySelector('.authorId').value;
        fetch('/java-ee-practice/api/authors/' + authorId, {
            method: 'GET',
            headers: {
                'Accept': 'text/plain'
            },
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.text();
            })
            .then(data => {
                console.log('Author Name:', data);
                document.getElementById('authorNameDisplay').textContent = data;
            })
            .catch(error => console.error('Error fetching author:', error));
    }

    function updateAuthor() {
        var authorId = document.querySelector('.authorIdUpdate').value;
        var newName = document.querySelector('.authorNameUpdate').value;
        fetch('/java-ee-practice/api/authors/' + authorId, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({name: newName})
        })
            .then(response => {
                console.log(response);
            })
    }
</script>
</html>


